#!/usr/bin/env bash

DEBUG=0
if [ "$1" = "--debug" ]; then
  DEBUG=1
  shift
fi
mode="$1"

########################################
# some config

# default settings
main_scale=""
second_scale=""
second_fb=""
second_where="left-of" #left-of|right-of|above|below
second_target="1"
third_scale=""
third_where="left-of"
third_target="2" # 1|2
beamer_name="VGA-1"
beamer_res="1024x768"


case $(hostname) in
  parakeet)
    main_name="eDP-1"
    main_res="1920x1080"

    second_name="HDMI-1"
    second_res="1920x1080"

    third_name="DP-2"
    third_res="1920x1200"
  ;;

  *)
    main_name="LVDS-1"
    main_res="1366x768"

    second_name="VGA-1"
    second_res="1920x1080"

    third_name="VGA-1"
    third_res="1024x768"

    # check for HiDPI panel (T460p)
    _ck=$(xrandr | grep "eDP-1 connected primary 2560")
    if [ $? = 0 ]; then
        main_name="eDP-1"
        main_res="2560x1440"
        main_scale="--scale 1x1"

        second_name="HDMI-1"
        second_res="1920x1080"
        second_scale="--scale 1.333x1.333"
        second_fb="--panning 2560x1440+2560+0"
    fi
  ;;
esac

function bg_set() {
    if [ -f "${HOME}/.fehbg" ]; then
        ${HOME}/.fehbg 2>&1| grep -v 'libpng warning: iCCP: known incorrect'
    fi
}

function run() {
    if [ $DEBUG = 1 ]; then
        echo " $@"
        RET=0
    else
        RET=$("$@")
    fi
    return $RET
}

if [ "${mode}" = "--show" ]; then
    _out=$(xrandr)
    echo "$_out" | grep '^Screen'
    echo
    echo "$_out" | grep ' connected' | sed "s/ connected/\tconnected/"
    echo
    echo "$_out" | grep ' disconnected' | sed "s/ disconnected/\tdisconnected/" | sort
    exit 0
fi


########################################
# notebook
########################################
echo "Main screen $main_name @ $main_res"
cmd="xrandr --output $main_name --mode $main_res $main_scale"
run $cmd

# on "Can't open display" use -d :0 for xrandr

########################################
# single screen
########################################
if [ "${mode}" = "--single" ]; then
    echo "Switching to single-display mode..."
    cmd="xrandr --output $third_name --off"
    run $cmd
    cmd="xrandr --output $second_name --off"
    run $cmd
    RET=$?
    bg_set
    exit $RET;
fi

########################################
# beamer
########################################
if [ "${mode}" = "--beamer" ]; then
    echo "Second screen: $beamer_name @ $beamer_res (mirror)"
    cmd="xrandr --output $beamer_name --mode $beamer_res --same-as $main_name --rotate normal"
    run $cmd
    RET=$?
    bg_set
    exit $RET;
fi

if [ "${mode}" = "--confi" ]; then
    second_res='1366x768'
    second_name='HDMI-1'
    echo "Second screen: $second_name @ $second_res (mirror)"
    cmd="xrandr --output $second_name --mode $second_res --same-as $main_name --rotate normal"
    run $cmd
    RET=$?
    bg_set
    exit $RET;
fi

########################################
# big 24"/27" or whatever
########################################
if [ "${mode}" = "--double" ]; then
    echo "Second screen: $second_name @ $second_res (right)"
    cmd="xrandr --output $second_name --mode $second_res --$second_where $main_name --rotate normal $second_scale $second_fb --auto"
    run $cmd
    RET=$?
    bg_set
    exit $RET;
fi

########################################
# three screens
########################################
if [ "${mode}" = "--triple" ]; then
    if [ "${second_target}" = "1" ]; then
        second_target="$main_name"
    fi
    echo "Second screen: $second_res ($second_where $second_target)"
    cmd="xrandr --output $second_name --mode $second_res --$second_where $second_target --rotate normal"
    run $cmd
    RET=$?

    if [ "${third_target}" = "2" ]; then
        third_target="$second_name"
    else
        third_target="$main_name"
    fi
    echo "Third screen: $second_res ($third_where $third_target)"
    cmd="xrandr --output $third_name --mode $third_res --"$third_where" $third_target --rotate normal"
    run $cmd
    RET=$?
    bg_set
    exit $RET;
fi
